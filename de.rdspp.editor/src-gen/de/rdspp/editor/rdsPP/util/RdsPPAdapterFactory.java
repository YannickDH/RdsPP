/**
 * generated by Xtext 2.12.0
 */
package de.rdspp.editor.rdsPP.util;

import de.rdspp.editor.rdsPP.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see de.rdspp.editor.rdsPP.RdsPPPackage
 * @generated
 */
public class RdsPPAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static RdsPPPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RdsPPAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = RdsPPPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RdsPPSwitch<Adapter> modelSwitch =
    new RdsPPSwitch<Adapter>()
    {
      @Override
      public Adapter caseModel(Model object)
      {
        return createModelAdapter();
      }
      @Override
      public Adapter caseDeclaration(Declaration object)
      {
        return createDeclarationAdapter();
      }
      @Override
      public Adapter caseRDSPPMarking(RDSPPMarking object)
      {
        return createRDSPPMarkingAdapter();
      }
      @Override
      public Adapter caseRDSPPComponent(RDSPPComponent object)
      {
        return createRDSPPComponentAdapter();
      }
      @Override
      public Adapter caseSignalIdentification(SignalIdentification object)
      {
        return createSignalIdentificationAdapter();
      }
      @Override
      public Adapter caseDocumentIdentification(DocumentIdentification object)
      {
        return createDocumentIdentificationAdapter();
      }
      @Override
      public Adapter caseFunctionalAssignment(FunctionalAssignment object)
      {
        return createFunctionalAssignmentAdapter();
      }
      @Override
      public Adapter caseFunctionalDesignation(FunctionalDesignation object)
      {
        return createFunctionalDesignationAdapter();
      }
      @Override
      public Adapter caseInstallationLocationDescription(InstallationLocationDescription object)
      {
        return createInstallationLocationDescriptionAdapter();
      }
      @Override
      public Adapter caseLocationDescription(LocationDescription object)
      {
        return createLocationDescriptionAdapter();
      }
      @Override
      public Adapter caseConnectionIdentification(ConnectionIdentification object)
      {
        return createConnectionIdentificationAdapter();
      }
      @Override
      public Adapter caseCommonAssignment(CommonAssignment object)
      {
        return createCommonAssignmentAdapter();
      }
      @Override
      public Adapter caseProductDescription(ProductDescription object)
      {
        return createProductDescriptionAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link de.rdspp.editor.rdsPP.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.rdspp.editor.rdsPP.Model
   * @generated
   */
  public Adapter createModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.rdspp.editor.rdsPP.Declaration <em>Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.rdspp.editor.rdsPP.Declaration
   * @generated
   */
  public Adapter createDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.rdspp.editor.rdsPP.RDSPPMarking <em>RDSPP Marking</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.rdspp.editor.rdsPP.RDSPPMarking
   * @generated
   */
  public Adapter createRDSPPMarkingAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.rdspp.editor.rdsPP.RDSPPComponent <em>RDSPP Component</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.rdspp.editor.rdsPP.RDSPPComponent
   * @generated
   */
  public Adapter createRDSPPComponentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.rdspp.editor.rdsPP.SignalIdentification <em>Signal Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.rdspp.editor.rdsPP.SignalIdentification
   * @generated
   */
  public Adapter createSignalIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.rdspp.editor.rdsPP.DocumentIdentification <em>Document Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.rdspp.editor.rdsPP.DocumentIdentification
   * @generated
   */
  public Adapter createDocumentIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.rdspp.editor.rdsPP.FunctionalAssignment <em>Functional Assignment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.rdspp.editor.rdsPP.FunctionalAssignment
   * @generated
   */
  public Adapter createFunctionalAssignmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.rdspp.editor.rdsPP.FunctionalDesignation <em>Functional Designation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.rdspp.editor.rdsPP.FunctionalDesignation
   * @generated
   */
  public Adapter createFunctionalDesignationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.rdspp.editor.rdsPP.InstallationLocationDescription <em>Installation Location Description</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.rdspp.editor.rdsPP.InstallationLocationDescription
   * @generated
   */
  public Adapter createInstallationLocationDescriptionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.rdspp.editor.rdsPP.LocationDescription <em>Location Description</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.rdspp.editor.rdsPP.LocationDescription
   * @generated
   */
  public Adapter createLocationDescriptionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.rdspp.editor.rdsPP.ConnectionIdentification <em>Connection Identification</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.rdspp.editor.rdsPP.ConnectionIdentification
   * @generated
   */
  public Adapter createConnectionIdentificationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.rdspp.editor.rdsPP.CommonAssignment <em>Common Assignment</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.rdspp.editor.rdsPP.CommonAssignment
   * @generated
   */
  public Adapter createCommonAssignmentAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link de.rdspp.editor.rdsPP.ProductDescription <em>Product Description</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see de.rdspp.editor.rdsPP.ProductDescription
   * @generated
   */
  public Adapter createProductDescriptionAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //RdsPPAdapterFactory
