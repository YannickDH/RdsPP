/**
 * generated by Xtext 2.12.0
 */
package de.rdspp.editor.rdsPP.util;

import de.rdspp.editor.rdsPP.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see de.rdspp.editor.rdsPP.RdsPPPackage
 * @generated
 */
public class RdsPPSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static RdsPPPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RdsPPSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = RdsPPPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case RdsPPPackage.MODEL:
      {
        Model model = (Model)theEObject;
        T result = caseModel(model);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdsPPPackage.DECLARATION:
      {
        Declaration declaration = (Declaration)theEObject;
        T result = caseDeclaration(declaration);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdsPPPackage.RDSPP_MARKING:
      {
        RDSPPMarking rdsppMarking = (RDSPPMarking)theEObject;
        T result = caseRDSPPMarking(rdsppMarking);
        if (result == null) result = caseDeclaration(rdsppMarking);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdsPPPackage.RDSPP_COMPONENT:
      {
        RDSPPComponent rdsppComponent = (RDSPPComponent)theEObject;
        T result = caseRDSPPComponent(rdsppComponent);
        if (result == null) result = caseDeclaration(rdsppComponent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdsPPPackage.SIGNAL_IDENTIFICATION:
      {
        SignalIdentification signalIdentification = (SignalIdentification)theEObject;
        T result = caseSignalIdentification(signalIdentification);
        if (result == null) result = caseRDSPPComponent(signalIdentification);
        if (result == null) result = caseDeclaration(signalIdentification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdsPPPackage.DOCUMENT_IDENTIFICATION:
      {
        DocumentIdentification documentIdentification = (DocumentIdentification)theEObject;
        T result = caseDocumentIdentification(documentIdentification);
        if (result == null) result = caseRDSPPComponent(documentIdentification);
        if (result == null) result = caseDeclaration(documentIdentification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdsPPPackage.FUNCTIONAL_ASSIGNMENT:
      {
        FunctionalAssignment functionalAssignment = (FunctionalAssignment)theEObject;
        T result = caseFunctionalAssignment(functionalAssignment);
        if (result == null) result = caseRDSPPComponent(functionalAssignment);
        if (result == null) result = caseDeclaration(functionalAssignment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdsPPPackage.FUNCTIONAL_DESIGNATION:
      {
        FunctionalDesignation functionalDesignation = (FunctionalDesignation)theEObject;
        T result = caseFunctionalDesignation(functionalDesignation);
        if (result == null) result = caseRDSPPComponent(functionalDesignation);
        if (result == null) result = caseDeclaration(functionalDesignation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdsPPPackage.INSTALLATION_LOCATION_DESCRIPTION:
      {
        InstallationLocationDescription installationLocationDescription = (InstallationLocationDescription)theEObject;
        T result = caseInstallationLocationDescription(installationLocationDescription);
        if (result == null) result = caseRDSPPComponent(installationLocationDescription);
        if (result == null) result = caseDeclaration(installationLocationDescription);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdsPPPackage.LOCATION_DESCRIPTION:
      {
        LocationDescription locationDescription = (LocationDescription)theEObject;
        T result = caseLocationDescription(locationDescription);
        if (result == null) result = caseRDSPPComponent(locationDescription);
        if (result == null) result = caseDeclaration(locationDescription);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdsPPPackage.CONNECTION_IDENTIFICATION:
      {
        ConnectionIdentification connectionIdentification = (ConnectionIdentification)theEObject;
        T result = caseConnectionIdentification(connectionIdentification);
        if (result == null) result = caseRDSPPComponent(connectionIdentification);
        if (result == null) result = caseDeclaration(connectionIdentification);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdsPPPackage.COMMON_ASSIGNMENT:
      {
        CommonAssignment commonAssignment = (CommonAssignment)theEObject;
        T result = caseCommonAssignment(commonAssignment);
        if (result == null) result = caseRDSPPComponent(commonAssignment);
        if (result == null) result = caseDeclaration(commonAssignment);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case RdsPPPackage.PRODUCT_DESCRIPTION:
      {
        ProductDescription productDescription = (ProductDescription)theEObject;
        T result = caseProductDescription(productDescription);
        if (result == null) result = caseRDSPPComponent(productDescription);
        if (result == null) result = caseDeclaration(productDescription);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModel(Model object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Declaration</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Declaration</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDeclaration(Declaration object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>RDSPP Marking</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>RDSPP Marking</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRDSPPMarking(RDSPPMarking object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>RDSPP Component</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>RDSPP Component</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRDSPPComponent(RDSPPComponent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Signal Identification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Signal Identification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSignalIdentification(SignalIdentification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Document Identification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Document Identification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDocumentIdentification(DocumentIdentification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Functional Assignment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Functional Assignment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFunctionalAssignment(FunctionalAssignment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Functional Designation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Functional Designation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFunctionalDesignation(FunctionalDesignation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Installation Location Description</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Installation Location Description</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInstallationLocationDescription(InstallationLocationDescription object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Location Description</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Location Description</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLocationDescription(LocationDescription object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Connection Identification</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Connection Identification</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConnectionIdentification(ConnectionIdentification object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Common Assignment</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Common Assignment</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCommonAssignment(CommonAssignment object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Product Description</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Product Description</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProductDescription(ProductDescription object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //RdsPPSwitch
